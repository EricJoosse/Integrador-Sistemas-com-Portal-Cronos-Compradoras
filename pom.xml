<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>pcronos.integracao.comprador</groupId>
  <artifactId>integr-comprador</artifactId>
  <version>0.1-SNAPSHOT</version>
  <name>Integrador de Sistemas com o Portal Cronos - para setores de Compras</name>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.build.timestamp.format>dd/MM/yyyy HH:mm</maven.build.timestamp.format>
  </properties>
  
  <repositories>
    <repository>
        <id>Remote-Maven-Repository-com-JDBC-Drivers</id>
        <url>https://raw.github.com/EricJoosse/Remote-Maven-Repository-com-JDBC-Drivers/mvn-repo/</url>
        <snapshots>
            <enabled>true</enabled>
            <updatePolicy>always</updatePolicy>
        </snapshots>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
    	<groupId>com.sun.jersey</groupId>
    	<artifactId>jersey-core</artifactId>
    	<version>1.12</version>
    </dependency>
    <dependency>
    	<groupId>com.sun.jersey</groupId>
    	<artifactId>jersey-bundle</artifactId>
    	<version>1.12</version>
    </dependency>
    <dependency>
    	<groupId>com.sun.jersey.contribs</groupId>
    	<artifactId>jersey-multipart</artifactId>
    	<version>1.12</version>
    </dependency>
    <dependency>
    	<groupId>oracle.jdbc</groupId>
    	<artifactId>jdbc-oracle</artifactId>
    	<version>10.2.0.5.0</version>
    </dependency>
    <dependency>
    	<groupId>org.firebirdsql.jdbc</groupId>
    	<artifactId>jaybird-full</artifactId>
    	<version>2.2.10</version>
    </dependency>
  </dependencies>
  
  <build>
    <sourceDirectory>${project.basedir}</sourceDirectory>

    <plugins>

      <!-- O Integrador de Sistemas com o Portal Cronos só compila com compatibilidade configurada para JDK 1.7 ou mais : -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.5.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
        
<!-- As seguintes 3 seções são necessárias para automatizar o deploy do nosso standalone Java Application (sem integração com Apache, Tomcat, etc) : -->
<!-- Veja o tutorial excelente no link http://www.javacreed.com/how-to-use-maven-with-an-application/) -->

<!-- 1. Copiar dependent jars : -->
		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-dependency-plugin</artifactId>
            <version>2.8</version>
		  <executions>
		    <execution>
		      <id>copy-dependencies</id>
		      <phase>prepare-package</phase>
		      <goals>
		        <goal>copy-dependencies</goal>
		      </goals>
		      <configuration>
		        <outputDirectory>${project.build.directory}/lib</outputDirectory>
		        <overWriteReleases>false</overWriteReleases>
		        <overWriteSnapshots>false</overWriteSnapshots>
		        <overWriteIfNewer>true</overWriteIfNewer>
		        <includeScope>compile</includeScope>
		      </configuration>
		    </execution>
		  </executions>
		</plugin>

<!-- 2. Adicionar dependent jars no Class-Path entry no Manifest file : -->
		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-jar-plugin</artifactId>
            <version>2.4</version>   
                   <!--  A versão 3.0.2 gera rt.jar na posição errada  -->
		  <configuration>
		    <archive>
		    
		      <manifest>
		        <packageName>pcronos.integracao.comprador</packageName>
<!--                 <addDefaultImplementationEntries>true</addDefaultImplementationEntries> -->
<!--                 <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries> -->
                <addClasspath>true</addClasspath>		        
		        <classpathPrefix>lib/</classpathPrefix>
		      </manifest>
		      
		      <manifestSections>
		          <manifestSection>
		            <name>Specification</name>
		            <manifestEntries>
				        <Specification-Title>Integrador Comprador - Portal Cronos</Specification-Title>
				        <Specification-Vendor>Cronos Technology, PE, Brasil</Specification-Vendor>
				        <Specification-Version>1.0.0</Specification-Version>
		            </manifestEntries>
		          </manifestSection>

		          <manifestSection>
		            <name>Implementation</name>
		            <manifestEntries>
				        <Implementation-Title>pcronos.integracao.comprador.PonteWebServicesPortalCronos.class</Implementation-Title>
				        <Implementation-Version>1.0.0</Implementation-Version>
				        <Implementation-Vendor>eric.jo@bol.com.br</Implementation-Vendor>
				        <Jar-Name>integr-comprador-0.1-SNAPSHOT.jar</Jar-Name>
		            </manifestEntries>
		          </manifestSection>

		      </manifestSections>

  		      <manifestEntries>
		        <Built-By>${user.name} Joosse -  eric.jo@bol.com.br (Portal Cronos)</Built-By>
		        <Build-Time>${maven.build.timestamp}</Build-Time>
<!-- 3. O seguinte concatena rt.jar e . ANTES do Class-Path gerado automaticamente por Maven : -->
   		        <Class-Path>file:///C:/Program%20Files/Java/jre1.8.0_92/lib/rt.jar .</Class-Path>
		     </manifestEntries>

		    </archive>
		  </configuration>
		</plugin>
    </plugins>
  </build>
</project>